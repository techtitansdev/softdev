import Head from "next/head";
import { useState, useEffect } from "react";
import Link from "next/link";
import ProjectCard from "./components/ProjectCard";
import { Sidebar } from "~/components/Sidebar";
import { api } from "~/utils/api";
import { useUser } from "@clerk/nextjs";
import { useRouter } from "next/router";
import { Modal } from "~/components/Modal";

const AdminProjectPage = () => {
  const [projectData, setProjectData] = useState<any>([]);
  const getProjects = api.project.getAll.useQuery();
  const deleteProject = api.project.delete.useMutation();
  const [isSuccessModalOpen, setSuccessModalOpen] = useState(false);

  useEffect(() => {
    if (getProjects.data) {
      setProjectData(getProjects.data);
    }
  }, [getProjects.data]);

  const handleDelete = async (id: string) => {
    try {
      deleteProject.mutate({ id });
      console.log("Project deleted successfully.");
      setSuccessModalOpen(true);
      setProjectData((prevProjects: any[]) =>
        prevProjects.filter((project: { id: string }) => project.id !== id),
      );

      setTimeout(() => {
        setSuccessModalOpen(false);
      }, 2000);
    } catch (error) {
      console.error("Error deleting project:", error);
    }
  };

  const { user, isLoaded } = useUser();
  const user_role = user?.publicMetadata.admin;
  const router = useRouter();

  useEffect(() => {
    if (isLoaded && user_role !== "admin") {
      router.push("/home");
    }
  }, [isLoaded, user_role]);

  if (!isLoaded) {
    return <div>Loading...</div>;
  }
  if (isLoaded && user_role !== "admin") {
    return <div>UNAUTHORIZED</div>;
  }

  return (
    <>
      <Head>
        <title>Projects | Global shapers</title>
        <meta name="description" content="Generated by create-next-app" />
        <link rel="icon" href="/gsi-logo.png" />
      </Head>

      <div className="flex">
        <Sidebar />

        <div className="mx-auto p-10">
          <div className="mt-16 border-b-2 border-black pb-4 text-2xl font-medium text-gray-800 md:text-3xl">
            PROJECTS
          </div>

          <div className="mt-10 py-2 md:flex">
            <Link href={`/admin/projects/create`}>
              <button className="w-72 rounded-lg bg-blue-800 py-2 text-lg font-light text-white hover:bg-blue-900">
                Create Project
              </button>
            </Link>
          </div>

          <div className="mb-12 mt-1 flex items-center justify-center">
            <div className="mt-4 grid grid-cols-1 gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
              {projectData.map((project: any) => (
                <div key={project.id}>
                  <ProjectCard
                    projectData={project}
                    handleDelete={() => handleDelete(project.id)}
                  />
                </div>
              ))}
            </div>
          </div>
        </div>
        <Modal
          isOpen={isSuccessModalOpen}
          onClose={() => setSuccessModalOpen(false)}
          message="Project Deleted Successfully."
          bgColor="bg-red-500"
        />
      </div>
    </>
  );
};

export default AdminProjectPage;
