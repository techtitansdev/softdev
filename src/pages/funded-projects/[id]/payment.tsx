import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { Footer } from "~/components/Footer";
import { Navbar } from "~/components/Navbar";
import { api } from "~/utils/api";

interface Funding {
  title: string;
  description: string;
  image: string;
}

const Payment = () => {
  const router = useRouter();
  const { id } = router.query;
  const [fundingData, setFundingData] = useState<Funding | null>(null);
  const [contributionType, setContributionType] = useState("Individual");
  const [fullName, setFullName] = useState("");
  const [phoneNumber, setPhoneNumber] = useState("");
  const [email, setEmail] = useState("");
  const [amount, setAmount] = useState("");
  const [paymentMethod, setPaymentMethod] = useState("");
  const [paymentError, setPaymentError] = useState<string | null>(null);
  const getFunding = api.fundraiser.getById.useQuery({ id: id as string });

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    try {
      console.log({
        contributionType,
        fullName,
        phoneNumber,
        email,
        amount,
        paymentMethod,
      });
    } catch (error) {
      setPaymentError(
        "An error occurred during payment. Please try again later.",
      );
    }
  };

  useEffect(() => {
    const fetchData = async () => {
      try {
        if (getFunding.data) {
          const fundingData: Funding = {
            title: getFunding.data.project.title,
            description: getFunding.data.project.description,
            image: getFunding.data.project.image,
          };
          setFundingData(fundingData);
        }
      } catch (error) {
        console.error("Error fetching funding data:", error);
      }
    };
    fetchData();
  }, [getFunding.data]);

  return (
    <>
      <Head>
        <title>Payment | Global Shapers</title>
        <meta name="description" content="Generated by create-next-app" />
        <link rel="icon" href="/gsi-logo.png" />
      </Head>

      <Navbar />

      <form
        onSubmit={handleSubmit}
        className="mx-auto mb-16 mt-32 flex max-w-[1300px] justify-between"
      >
        <div className="flex w-1/2 flex-col items-center justify-center">
          {fundingData && (
            <div className="flex w-11/12 flex-col">
              <div className="text-normal mx-1 text-lg font-normal text-gray-700">
                YOU ARE DONATING TO:
              </div>
              <div className="mx-1 mb-4 text-4xl font-semibold text-gray-700">
                {fundingData.title}
              </div>
              <img
                src={fundingData.image}
                className="mb-2 h-96 w-full rounded-lg shadow-md"
                alt={fundingData.title}
              />
              <div className="text-normal text-medium mx-1 line-clamp-3 font-light">
                {fundingData.description}
              </div>
            </div>
          )}
        </div>

        <div className="flex w-1/2 flex-col items-center justify-center">
          <p className="text-2xl font-medium">Contribute As:</p>
          <div className="mt-2 flex flex-row items-center">
            <div className="mt-2 inline-flex items-center">
              <input
                type="radio"
                name="contributionType"
                value="Individual"
                className="h-6 w-6 text-gray-600"
                checked={contributionType === "Individual"}
                onChange={() => setContributionType("Individual")}
              />
              <span className="ml-2 mr-4 text-lg font-light">Individual</span>
            </div>
            <div className="mt-2 inline-flex items-center">
              <input
                type="radio"
                name="contributionType"
                value="Company"
                className="h-6 w-6 text-gray-600"
                checked={contributionType === "Company"}
                onChange={() => setContributionType("Company")}
              />
              <span className="ml-2 mr-4 text-lg font-light">Company</span>
            </div>
            <div className="mr-4 mt-2 inline-flex items-center">
              <input
                type="radio"
                name="contributionType"
                value="Anonymous"
                className="h-6 w-6 text-gray-600"
                checked={contributionType === "Anonymous"}
                onChange={() => setContributionType("Anonymous")}
              />
              <span className="ml-2 text-lg font-light">Anonymous</span>
            </div>
          </div>
          {contributionType !== "Anonymous" && (
            <>
              <input
                type="text"
                placeholder="Full Name"
                className="my-2 w-9/12 border-b border-gray-800 py-2 pl-2 pr-3 text-black outline-none focus:outline-none"
                value={fullName}
                onChange={(e) => setFullName(e.target.value)}
              />
              <input
                type="text"
                placeholder="Phone Number"
                className="my-2 w-9/12 border-b border-gray-800 py-2 pl-2 pr-3 text-black outline-none focus:outline-none"
                value={phoneNumber}
                onChange={(e) => setPhoneNumber(e.target.value)}
              />
              <input
                type="text"
                placeholder="Email Address"
                className="my-2 w-9/12 border-b border-gray-800 py-2 pl-2 pr-3 text-black outline-none focus:outline-none"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
              />
            </>
          )}

          <input
            type="text"
            placeholder="Amount"
            className="mt-6 w-9/12 rounded-md border border-gray-400 py-4 pl-4 pr-4 shadow-lg"
            value={amount}
            onChange={(e) => setAmount(e.target.value)}
          />

          <input
            type="text"
            placeholder="Payment Method"
            className="mt-6 w-9/12 rounded-md border border-gray-400 py-6 pl-4 pr-4 shadow-lg"
            value={paymentMethod}
            onChange={(e) => setPaymentMethod(e.target.value)}
          />

          {paymentError && <div className="text-red-500">{paymentError}</div>}

          <button
            type="submit"
            className="mt-6 w-9/12 rounded-lg border border-gray-400 bg-blue-800 py-2 text-white hover:bg-blue-900 "
          >
            Pay Now
          </button>
        </div>
      </form>

      <Footer />
    </>
  );
};

export default Payment;
